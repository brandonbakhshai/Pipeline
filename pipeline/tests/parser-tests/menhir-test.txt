// PASSING !

//SHOULD//
// 1) function name()void {a(5);}
FUNCTION ID LPAREN RPAREN VOID LBRACE ID LPAREN INT_LIT RPAREN SEMI RBRACE

// 2) function name () void {}
FUNCTION ID LPAREN RPAREN VOID LBRACE RBRACE

// 3) function name () void {a(5,6);}
FUNCTION ID LPAREN RPAREN VOID LBRACE ID LPAREN INT_LIT COMMA FLOAT_LIT RPAREN SEMI RBRACE

// 4) function name () void {a = 5;}
FUNCTION ID LPAREN RPAREN VOID LBRACE ID ASSIGN INT_LIT SEMI RBRACE

// 5) function name (a int, b int) void {a = 5;}
FUNCTION ID LPAREN ID INT COMMA ID INT RPAREN VOID LBRACE ID ASSIGN INT_LIT SEMI RBRACE

// 6) function name (a int, b int) void {let a int;}
FUNCTION ID LPAREN ID INT COMMA ID INT RPAREN VOID LBRACE LET ID INT SEMI RBRACE

// 7) function name () int { a = 5+4;}
FUNCTION ID LPAREN RPAREN INT LBRACE ID ASSIGN INT_LIT PLUS INT_LIT SEMI RBRACE

// 8) function name () int { a = b>c;}
FUNCTION ID LPAREN RPAREN INT LBRACE ID ASSIGN ID GEQ ID SEMI RBRACE

// 9) function name () void {a(c,b);}
FUNCTION ID LPAREN RPAREN VOID LBRACE ID LPAREN ID COMMA ID RPAREN SEMI RBRACE

// 10) function name () void { if(a>b){c = 5;}}

// 11) function name () void {for(a=5;a<10;a= a+1) c = 120;}
FUNCTION ID LPAREN RPAREN VOID LBRACE FOR LPAREN ID ASSIGN INT_LIT SEMI ID LEQ INT_LIT SEMI ID ASSIGN ID PLUS INT_LIT RPAREN ID ASSIGN INT_LIT SEMI RBRACE

// 12) function name () void {for(a=5;a<10;a= a+1) c = 120;a>b;}
FUNCTION ID LPAREN RPAREN VOID LBRACE FOR LPAREN ID ASSIGN INT_LIT SEMI ID LEQ INT_LIT SEMI ID ASSIGN ID PLUS INT_LIT RPAREN ID ASSIGN INT_LIT SEMI ID GEQ ID SEMI RBRACE

// 13) function name () void {if(a>b) c=5;}
FUNCTION ID LPAREN RPAREN VOID LBRACE IF LPAREN ID GEQ ID RPAREN ID ASSIGN INT_LIT SEMI RBRACE

// 14) function name () void {return;}
FUNCTION ID LPAREN RPAREN VOID LBRACE RETURN SEMI RBRACE

// 15) function name () void {return 5;}
FUNCTION ID LPAREN RPAREN VOID LBRACE RETURN INT_LIT SEMI RBRACE

// 16) function name () void {return a;}
FUNCTION ID LPAREN RPAREN VOID LBRACE RETURN ID SEMI RBRACE

// 17) function name () void {if(a>b) c=5; else c = 5.4;}
FUNCTION ID LPAREN RPAREN VOID LBRACE IF LPAREN ID GEQ ID RPAREN ID ASSIGN INT_LIT SEMI ELSE ID ASSIGN FLOAT_LIT SEMI RBRACE

// 18) function name () void {if(a>b) c=5; else if (b>c) c = 5.4;}
FUNCTION ID LPAREN RPAREN VOID LBRACE IF LPAREN ID GEQ ID RPAREN ID ASSIGN INT_LIT SEMI ELSE IF LPAREN ID GEQ ID RPAREN ID ASSIGN INT_LIT SEMI RBRACE


// BUT SHOULD FAIL !! 

// 19) function name () void {while(a>b){c+d=c;}}
FUNCTION ID LPAREN RPAREN VOID LBRACE WHILE LPAREN ID AND ID RPAREN LBRACE ID PLUS ID ASSIGN ID SEMI RBRACE RBRACE


//// FAILING ////
// BUT SHOULD NOT //
// function name (a int, b int) void {let a int = 5;}
FUNCTION ID LPAREN ID INT COMMA ID INT RPAREN VOID LBRACE LET ID INT ASSIGN INT_LIT SEMI RBRACE

// function name () void {for(a=5;a<10;a= a+1);}
FUNCTION ID LPAREN RPAREN VOID LBRACE FOR LPAREN ID ASSIGN INT_LIT SEMI ID LEQ INT_LIT SEMI ID ASSIGN ID PLUS INT_LIT RPAREN SEMI RBRACE

// SHOULD //
// function name () void {a(5)}
FUNCTION ID LPAREN RPAREN VOID LBRACE ID LPAREN INT_LIT RPAREN RBRACE

// function name () void {if(a>b) }
FUNCTION ID LPAREN RPAREN VOID LBRACE IF LPAREN ID GEQ ID RPAREN RBRACE

// function name () void {if(a>b) c=5; d+e; else if (b>c) c = 5.4;}
FUNCTION ID LPAREN RPAREN VOID LBRACE IF LPAREN ID GEQ ID RPAREN ID ASSIGN INT_LIT SEMI ID PLUS ID SEMI ELSE IF LPAREN ID GEQ ID RPAREN ID ASSIGN INT_LIT SEMI RBRACE
